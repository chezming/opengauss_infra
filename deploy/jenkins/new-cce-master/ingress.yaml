# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/proxy-body-size: 20m
#     cert-manager.io/cluster-issuer: letsencrypt-issuer
#     nginx.ingress.kubernetes.io/custom-http-errors: "404"
#     nginx.ingress.kubernetes.io/configuration-snippet: |
#       add_header X-XSS-Protection "1; mode=block";
#       add_header X-Frame-Options "SAMEORIGIN";
#   name: opengauss-jenkins-ingress
# spec:
#   tls:
#     - hosts:
#         - jenkins2.opengauss.org
#       secretName: opengauss-jenkins-tls
#   rules:
#     - host: jenkins2.opengauss.org
#       http:
#         paths:
#           - backend:
#               serviceName: oauth2-proxy
#               servicePort: 4180
#             path: /

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    nginx.ingress.kubernetes.io/custom-http-errors: "404"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Frame-Options "SAMEORIGIN";
  name: opengauss-jenkins-ingress
  namespace: jenkins
spec:
  tls:
    - hosts:
        - jenkins2.opengauss.org
      secretName: opengauss-jenkins-tls
  rules:
    - host: jenkins2.opengauss.org
      http:
        paths:
          - backend:
              serviceName: oauth2-proxy
              servicePort: 4180
            path: /
